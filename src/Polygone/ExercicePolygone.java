package Polygone;


import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Yan Revuz
 */
public class ExercicePolygone extends javax.swing.JFrame {
    
    
      //Tous les etat de notre Automate
    private enum State {
        INIT, //etat initial
        POINT,
        LINE,
        POLYGONE
    }
    
    /* Etat en cours*/
    private State etatEnCours;
    
    private int compteur;
    
    /* Les coordonnées du dernier point */
    private int x,y;
    
    /* La liste de tous les points */
    private ArrayList<Point> listPoint;
    
    /**
     * Creates new form ExercicePolygone
     */
    public ExercicePolygone() {
        initComponents();
        init();
    }

    public void init(){
        initCompteur();
        this.listPoint = new ArrayList<Point>();
        changeState(State.INIT);
    };
    
    /* Permet de changer d'état */
    public void changeState(State state){
        this.etatEnCours = state;
    }
    
    /* Initialise le compteur */
    public void initCompteur(){
        this.compteur =0;
    }
    
    /* Incremente le compteur */
    public void incrementeCompteur(){
        this.compteur += 1;
    }
    
    /* Change les coordonnées du dernier point */
    public void changeXY(int x,int y){
        this.x = x;
        this.y = y;
    }
    
    /* Ajoute un point à la liste */
    private void addPoint(Point point){
        this.listPoint.add(point);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if( evt.getKeyCode() == KeyEvent.VK_SPACE){
            switch(this.etatEnCours){
                case INIT:
                    /* Interdit */
                    break;
                case POINT:
                    /* Interdit */
                    break;
                case LINE:
                    /* Interdit */
                    break;
                case POLYGONE:
                    /* Interdit */
                    break;
            }
        }
    }//GEN-LAST:event_formKeyPressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        switch(this.etatEnCours){
            case INIT:
                /* Interdit */
                break;
            case POINT:
                /* Interdit */
                break;
            case LINE:
                /* Interdit */
                break;
            case POLYGONE:
                /* Interdit */
                break;
        }
    }//GEN-LAST:event_formMouseDragged

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        switch(evt.getButton()){
            case MouseEvent.BUTTON1:
                callSwitchLeftClick(evt);
                break;
            case MouseEvent.BUTTON2:
                callSwitchRightClick(evt);
                break;
        }
    }//GEN-LAST:event_formMouseClicked
    
    public void callSwitchLeftClick(MouseEvent evt){
        switch(this.etatEnCours){
            case INIT:
                changeState(State.POINT);
                incrementeCompteur();
                changeXY(evt.getX(),evt.getY());
                addPoint(new Point(getX(), getY()));
                break;
            case POINT:
                /* Interdit */
                break;
            case LINE:
                /* Interdit */
                break;
            case POLYGONE:
                /* Interdit */
                break;
        }
    }
    
    public void callSwitchRightClick(MouseEvent evt){
        switch(this.etatEnCours){
            case INIT:
                /* Interdit */
                break;
            case POINT:
                /* Interdit */
                break;
            case LINE:
                /* Interdit */
                break;
            case POLYGONE:
                /* Interdit */
                break;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExercicePolygone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExercicePolygone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExercicePolygone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExercicePolygone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExercicePolygone().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
